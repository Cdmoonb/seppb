<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "mybatis-3-mapper.dtd">

<!-- 该xml需先在mybatis.xml中注册 -->
<mapper namespace="com.pr.sepp.sep.requirement.dao.RequirementDAO">

    <select id="reqQuery" resultType="com.pr.sepp.sep.requirement.model.Requirement">
        SELECT req.*,
               COUNT(c.id) AS changeTimes,
               rel.rel_code as relCode
          FROM (
            SELECT
                r.id,
                r.source_id as sourceId,
                r.type,
                r.rel_id as relId,
                rt.type_name as typeName,
                r.status,
                rs.status_name as statusName,
                r.priority,
                rp.priority_name as priorityName,
                r.module_id as moduleId,
                pm.module_name as moduleName,
                pm.pd_responser as pdResponser,
                pm.dev_responser as devResponser,
                pm.test_responser as testResponser,
                r.submitter,
                r.product_id as productId,
                r.ui_resource as uiResource,
                r.attachment,
                r.close_style as closeStyle,
                date_format(r.submit_date, '%Y-%m-%d') as submitDate,
                date_format(r.expect_date, '%Y-%m-%d') as expectDate,
                date_format(r.uat_date, '%Y-%m-%d') as uatDate,
                date_format(r.sit_date, '%Y-%m-%d') as sitDate,
                r.summary,
                r.detail
            FROM
                sepp_requirement r,
                sepp_req_priority rp,
                sepp_req_status rs,
                sepp_req_type rt,
                sepp_prod_module pm
            WHERE r.product_id = #{productId}
              AND r.id > 0
              AND r.status = rs.status_id
              AND r.priority = rp.priority_id
              AND r.module_id = pm.module_id
              AND r.type = rt.type_id
        <choose>
            <when test="id!=null and id!=''">
                and r.id = #{id}
            </when>
            <when test="cmId!=null and cmId!=''">
                and r.id in (select req_id from sepp_code_mission where id= #{cmId})
            </when>
            <when test="tmId!=null and tmId!=''">
                and r.id in (select req_id from sepp_test_mission where id= #{tmId})
            </when>
            <when test="defectId!=null and defectId!=''">
                and r.id in (select req_id from sepp_defects where id= #{defectId})
            </when>
            <otherwise>
                <if test="types!=null">
                    and r.type in
                    <foreach collection="types" index="index" item="type" open="(" separator="," close=")">
                        #{type}
                    </foreach>
                </if>
                <if test="sts!=null">
                    and r.status in
                    <foreach collection="sts" index="index" item="status" open="(" separator="," close=")">
                        #{status}
                    </foreach>
                </if>
                <if test="modules!=null">
                    and r.module_id in
                    <foreach collection="modules" index="index" item="moduleId" open="(" separator="," close=")">
                        #{moduleId}
                    </foreach>
                </if>
                <if test="relId!=null and relId!=''">
                    <choose>
                        <when test='relId=="NOTHING" or relId=="NONE" or relId=="NULL"'>
                            and r.rel_id is null
                        </when>
                        <otherwise>
                            and r.rel_id = #{relId}
                        </otherwise>
                    </choose>
                </if>
                <if test="priority!=null and priority!=''">
                    and r.priority = #{priority}
                </if>
                <if test="sourceId!=null and sourceId!=''">
                    and r.source_id = #{sourceId}
                </if>
                <if test="submitter!=null and submitter!=''">
                    and r.submitter = #{submitter}
                </if>
                <if test="sitDateBegin!=null and sitDateBegin!=''">
                    <![CDATA[and r.sit_date >= #{sitDateBegin}]]>
                </if>
                <if test="sitDateEnd!=null and sitDateEnd!=''">
                    <![CDATA[and r.sit_date <= #{sitDateEnd}]]>
                </if>
                <if test="uatDateBegin!=null and uatDateBegin!=''">
                    <![CDATA[and r.uat_date >= #{uatDateBegin}]]>
                </if>
                <if test="uatDateEnd!=null and uatDateEnd!=''">
                    <![CDATA[and r.uat_date <= #{uatDateEnd}]]>
                </if>
                <if test="submitDateBegin!=null and submitDateBegin!=''">
                    <![CDATA[and r.submit_date >= #{submitDateBegin}]]>
                </if>
                <if test="submitDateEnd!=null and submitDateEnd!=''">
                    <![CDATA[and r.submit_date <= #{submitDateEnd}]]>
                </if>
                <if test="expectDateBegin!=null and expectDateBegin!=''">
                    <![CDATA[and r.expect_date >= #{expectDateBegin}]]>
                </if>
                <if test="expectDateEnd!=null and expectDateEnd!=''">
                    <![CDATA[and r.expect_date <= #{expectDateEnd}]]>
                </if>
            </otherwise>
        </choose>
        ) AS req
        LEFT JOIN sepp_req_change c ON c.req_id = req.id
        LEFT JOIN sepp_release rel ON rel.id = req.relId
        GROUP BY req.id
        ORDER BY req.id desc
    </select>

    <select id="relReqQuery" resultType="com.pr.sepp.sep.requirement.model.Requirement">
        SELECT req.*,
            COUNT(cm.id) AS cmCount
        FROM (
            SELECT
                r.id,
                r.source_id as sourceId,
                r.type,
                r.rel_id as relId,
                rel.rel_code as relCode,
                rt.type_name as typeName,
                r.status,
                rs.status_name as statusName,
                r.priority,
                rp.priority_name as priorityName,
                r.module_id as moduleId,
                pm.module_name as moduleName,
                pm.pd_responser as pdResponser,
                pm.dev_responser as devResponser,
                pm.test_responser as testResponser,
                r.submitter,
                r.product_id as productId,
                r.ui_resource as uiResource,
                r.attachment,
                r.close_style as closeStyle,
                date_format(r.submit_date, '%Y-%m-%d') as submitDate,
                date_format(r.expect_date, '%Y-%m-%d') as expectDate,
                date_format(r.uat_date, '%Y-%m-%d') as uatDate,
                date_format(r.sit_date, '%Y-%m-%d') as sitDate,
                r.summary,
                r.detail
            FROM
                sepp_requirement r,
                sepp_req_priority rp,
                sepp_req_status rs,
                sepp_req_type rt,
                sepp_prod_module pm,
                sepp_release rel
            WHERE r.id > 0
              AND r.status = rs.status_id
              AND r.priority = rp.priority_id
              AND r.module_id = pm.module_id
              AND r.type = rt.type_id
              And r.rel_id = rel.id
              AND r.rel_id = #{relId}) as req
            LEFT JOIN sepp_code_mission cm on cm.req_id = req.id
        GROUP BY req.id
        ORDER BY req.id desc
    </select>

    <select id="reqBatchQuery" resultType="com.pr.sepp.sep.requirement.model.Requirement">
        select
            r.id,
            r.source_id as sourceId,
            r.type,
            r.rel_id as relId,
            rt.type_name as typeName,
            r.status,
            rs.status_name as statusName,
            r.priority,
            rp.priority_name as priorityName,
            r.module_id as moduleId,
            pm.module_name as moduleName,
            r.submitter,
            r.product_id as productId,
            r.ui_resource as uiResource,
            r.attachment,
            r.close_style as closeStyle,
            date_format(r.submit_date, '%Y-%m-%d') as submitDate,
            date_format(r.expect_date, '%Y-%m-%d') as expectDate,
            date_format(r.uat_date, '%Y-%m-%d') as uatDate,
            date_format(r.sit_date, '%Y-%m-%d') as sitDate,
            r.summary,
            r.detail
        from
            sepp_requirement r,
            sepp_req_priority rp,
            sepp_req_status rs,
            sepp_req_type rt,
            sepp_prod_module pm
        where r.id in
            <foreach collection="reqs" index="index" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
            and r.status = rs.status_id
            and r.priority = rp.priority_id
            and r.module_id =pm.module_id
            and r.type = rt.type_id
            and r.id> 0
        order by r.id desc
    </select>

    <insert id="reqCreate" useGeneratedKeys="true" parameterType="com.pr.sepp.sep.requirement.model.Requirement">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            select last_insert_id()
        </selectKey>
        insert into
            sepp_requirement(submit_date, expect_date, status, priority, module_id, type, submitter,
            source_id, rel_id, attachment, ui_resource, product_id, summary, detail)
        values
            (#{submitDate}, #{expectDate}, #{status}, #{priority}, #{moduleId}, #{type}, #{submitter},
            #{sourceId}, null ,#{attachment}, #{uiResource}, #{productId}, #{summary},#{detail})
    </insert>

    <update id="reqRelease" parameterType="java.util.HashMap">
        <foreach collection="releasing" index="index" item="item" open="" close="" separator=";">
            update
                sepp_requirement
            <set>
                rel_id = #{item.relId},
                sit_date = #{item.sitDate},
                uat_date = #{item.uatDate},
                status =
                    case
                        when status = 1
                        then 2
                        else status
                    end
            </set>
            <where>
                id = #{item.id}
            </where>
        </foreach>
    </update>

    <update id="reqDefectRelease" parameterType="java.util.HashMap">
        <foreach collection="releasing" index="index" item="item" open="" close="" separator=";">
            update
                sepp_defects
            <set>
                rel_id = #{item.relId}
            </set>
            <where>
                req_id = #{item.id}
            </where>
        </foreach>
    </update>

    <update id="reqUnRelease" parameterType="java.util.HashMap">
        update
            sepp_requirement
        set
            rel_id = null,
            sit_date = null,
            uat_date = null,
            status =
                case
                    when status = 2
                    then 1
                    else status
                end
        where id in
        <foreach collection="reqs" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <update id="reqDefectUnRelease" parameterType="java.util.HashMap">
        update
            sepp_defects
        set
            rel_id = null
        where req_id in
        <foreach collection="reqs" index="index" item="reqId" open="(" separator="," close=")">
            #{reqId}
        </foreach>
    </update>

    <update id="reqUpdate" parameterType="com.pr.sepp.sep.requirement.model.Requirement">
        update
            sepp_requirement
        set
            type=#{type},
            rel_id=#{relId},
            priority=#{priority},
            expect_date=#{expectDate},
            summary=#{summary},
            close_style=#{closeStyle},
            source_id=#{sourceId},
            sit_date=#{sitDate},
            uat_date=#{uatDate},
            ui_resource=#{uiResource},
            module_id=#{moduleId},
            detail=#{detail},
            attachment=#{attachment},
            status=#{status}
        where id=#{id}
    </update>

    <update id="reqStatusUpdate" parameterType="com.pr.sepp.sep.requirement.model.ReqStatusUpdate">
        update
            sepp_requirement
        set
            <if test="closeStyle!=null and closeStyle!=''">
                close_style=#{closeStyle},
            </if>
            status=#{status}
        where id=#{id}
    </update>

    <update id="moveReqDefectNotClosed">
        update
            sepp_defects
        set
            req_id=#{newReqId},
            rel_id = null
        where req_id=#{oldReqId}
          and status > 0
    </update>

    <update id="moveReqCmsNotCompleted">
        update
            sepp_code_mission
        set
            req_id=#{newReqId}
        where req_id=#{oldReqId}
          and status > 0
          and status <![CDATA[ < ]]> 5
    </update>

    <select id="reqHistoryQuery" resultType="java.util.HashMap" parameterType="java.lang.Integer">
        SELECT res.content, DATE_FORMAT(res.oper_timestamp, '%Y-%m-%d %H:%i') AS operTime
        FROM (
            <!--正常提交-->
            SELECT
                CONCAT('由【', u.user_name, '】操作：提交新的产品需求') AS content,
                pd.created_date AS oper_timestamp
            FROM
                sepp_pr_audit a,
                sepp_product_requirement pd,
                sepp_user u
            WHERE a.pr_id = pd.id
              AND u.user_id = pd.submitter
              AND a.formal_id = #{reqId}
            UNION
            <!--延期复制-->
            SELECT
                CONCAT('由【', u.user_name, '】操作：通过产品需求#', r.source_id, '延期复制生成本需求') AS content,
                DATE_FORMAT(r.created_date,'%Y-%m-%d %H:%i') AS oper_timestamp
            FROM
                sepp_requirement r,
                sepp_user u,
                sepp_history h
            WHERE r.type = 5
              AND u.user_id = h.oper_user
              AND h.obj_type = 2
              AND h.obj_id = r.source_id
              AND h.obj_key = 'status'
              AND h.new_value = '0'
              AND r.id = #{reqId}
            UNION
            <!--线上问题转报-->
            SELECT
                CONCAT('由【', u.user_name, '】操作：通过线上问题#', r.source_id, '转报生成本需求') AS content,
                DATE_FORMAT(r.created_date,'%Y-%m-%d %H:%i') AS oper_timestamp
            FROM
                sepp_requirement r,
                sepp_user u,
                sepp_problem p
            WHERE u.user_id = r.submitter
              AND p.id = r.source_id
              AND r.id = p.trans_id
              AND r.id = #{reqId}
            UNION
            <!--需求送审-->
            SELECT
                CONCAT('由【', u.user_name, '】操作：产品需求送审') AS content,
                a.submit_time AS oper_timestamp
            FROM
                sepp_product_requirement pd,
                sepp_pr_audit a,
                sepp_user u
            WHERE a.pr_id = pd.id
              AND u.user_id = a.submitter
              AND a.formal_id = #{reqId}
            UNION
            <!--审批通过，创建正式软件开发需求-->
            SELECT
                CONCAT('产品需求审批通过，创建正式软件开发需求') AS content,
                a.complete_time AS oper_timestamp
            FROM
                sepp_product_requirement pd,
                sepp_pr_audit a
            WHERE a.pr_id = pd.id
              AND a.formal_id = #{reqId}
            UNION
            <!--纳入版本-->
            SELECT
                CONCAT('由【', u.user_name, '】操作：',
                       SUBSTRING(
                               h.oper_comment,
                               LOCATE('】已', h.oper_comment) + 2,
                               LENGTH(h.oper_comment) - LOCATE('】已', h.oper_comment)
                           )
                    ) AS content,
                h.oper_time AS oper_timestamp
            FROM
                sepp_history h,
                sepp_requirement r,
                sepp_user u
            WHERE h.obj_id = r.id
              AND h.obj_type = 2
              AND h.obj_key = 'rel_id'
              AND u.user_id = h.oper_user
              AND r.id = #{reqId}
            UNION
            <!--拆分任务-->
            SELECT
                CONCAT('由【', u.user_name, '】操作：拆分出【', COUNT(DISTINCT h.obj_id), '】个开发任务') AS content,
                DATE_FORMAT(h.oper_time, '%Y-%m-%d %H:%i') AS oper_timestamp
            FROM
                sepp_history h,
                sepp_code_mission c,
                sepp_user u
            WHERE h.obj_type = 6
              AND oper_type = 1
              AND h.obj_id = c.id
              AND u.user_id = h.oper_user
              AND c.req_id = #{reqId}
            GROUP BY c.req_id, oper_timestamp
            UNION
            <!--状态变迁-->
            SELECT
                CONCAT('由【', u.user_name, '】操作，状态变更为【', rs.status_name, '】') AS content,
                h.oper_time AS oper_timestamp
            FROM
                sepp_history h,
                sepp_req_status rs,
                sepp_user u
            WHERE h.obj_type = 2
              AND h.obj_key = 'status'
              AND h.new_value = rs.status_id
              AND h.oper_user = u.user_id
              AND h.obj_id = #{reqId}
            UNION
            <!--变更情况-->
            SELECT
                CONCAT('由【', u.user_name, '】操作，发生需求变更：', c.change_desc) AS content,
                c.change_time AS oper_timestamp
            FROM
                sepp_req_change c,
                sepp_user u
            WHERE c.change_user = u.user_id
              AND c.req_id = #{reqId}) res
        ORDER BY res.oper_timestamp
    </select>
</mapper>
