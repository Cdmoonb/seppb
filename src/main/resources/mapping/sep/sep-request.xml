<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "mybatis-3-mapper.dtd">

<!-- 该xml需先在mybatis.xml中注册 -->
<mapper namespace="com.pr.sepp.sep.request.data.dao.RequestDAO">

    <select id="requestQuery" resultType="com.pr.sepp.sep.request.data.model.ProductRequirement">
        select
            r.id,
            r.type,
            r.status,
            r.priority,
            r.module_id                             as moduleId,
            r.submitter,
            r.product_id                            as productId,
            r.attachment,
            r.ui_resource                           as uiResource,
            r.refuse_times                          as refuseTimes,
            date_format(r.submit_date, '%Y-%m-%d')  as submitDate,
            date_format(r.expect_date, '%Y-%m-%d')  as expectDate,
            r.summary,
            r.detail,
            rt.type_name                            as typeName,
            rs.status_name                          as statusName,
            rp.priority_name                        as priorityName,
            pm.module_name                          as moduleName,
            u.user_name                             as submitterName
        from
            sepp_product_requirement r,
            sepp_req_priority rp,
            sepp_pr_status rs,
            sepp_req_type rt,
            sepp_prod_module pm,
            sepp_user u
        where r.product_id = #{productId}
            AND r.id > 0
            and r.status = rs.status_id
            and r.priority = rp.priority_id
            and r.module_id =pm.module_id
            and r.type = rt.type_id
            and r.submitter = u.user_id
            <choose>
                <when test="id!=null and id!=''">
                    and r.id = #{id}
                </when>
                <otherwise>
                    <if test="types!=null">
                        and r.type in
                        <foreach collection="types" index="index" item="type" open="(" separator="," close=")">
                            #{type}
                        </foreach>
                    </if>
                    <if test="sts!=null">
                        and r.status in
                        <foreach collection="sts" index="index" item="status" open="(" separator="," close=")">
                            #{status}
                        </foreach>
                    </if>
                    <if test="modules!=null">
                        and r.module_id in
                        <foreach collection="modules" index="index" item="moduleId" open="(" separator="," close=")">
                            #{moduleId}
                        </foreach>
                    </if>
                    <if test="priority!=null and priority!=''">
                        and r.priority = #{priority}
                    </if>
                    <if test="submitter!=null and submitter!=''">
                        and r.submitter = #{submitter}
                    </if>
                    <if test="submitDateBegin!=null and submitDateBegin!=''">
                        <![CDATA[and r.submit_date >= #{submitDateBegin}]]>
                    </if>
                    <if test="submitDateEnd!=null and submitDateEnd!=''">
                        <![CDATA[and r.submit_date <= #{submitDateEnd}]]>
                    </if>
                </otherwise>
            </choose>
        order by r.id desc
    </select>

    <insert id="requestCreate" useGeneratedKeys="true" parameterType="com.pr.sepp.sep.request.data.model.ProductRequirement">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            select last_insert_id()
        </selectKey>
        insert into
            sepp_product_requirement(submit_date, expect_date, status, priority, module_id, type, submitter,
            attachment, product_id, ui_resource, refuse_times, summary, detail)
        values
            (#{submitDate}, #{expectDate}, #{status}, #{priority}, #{moduleId}, #{type}, #{submitter},
            #{attachment}, #{productId}, #{uiResource}, 0, #{summary}, #{detail})
    </insert>

    <update id="requestUpdate" parameterType="com.pr.sepp.sep.request.data.model.ProductRequirement">
        update
            sepp_product_requirement
        set
            expect_date=#{expectDate},
            summary=#{summary},
            type=#{type},
            refuse_times=#{refuseTimes},
            priority=#{priority},
            module_id=#{moduleId},
            ui_resource=#{uiResource},
            detail=#{detail},
            attachment=#{attachment},
            status=#{status}
        where id=#{id}
    </update>

    <update id="requestStatusUpdate">
        update
            sepp_product_requirement
        set
            status=#{status}
        where id=#{id}
    </update>

    <update id="requestClose" parameterType="java.lang.Integer">
        update
            sepp_product_requirement
        set
            status=0
        where id=#{id}
    </update>

    <update id="requestSendAudit" parameterType="java.lang.Integer">
        update
            sepp_product_requirement
        set
            status=2
        where id=#{id}
    </update>

    <update id="addAuditRefuseTimes" parameterType="java.lang.Integer">
        update
            sepp_product_requirement
        set
            refuse_times=refuse_times + 1
        where id=#{id}
    </update>

</mapper>
